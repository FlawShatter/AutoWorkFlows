name: 同步 Coolsnowwolf 仓库

on:
  schedule:
    - cron: '0 */6 * * *'  # 每6小时运行一次
  push:
      paths:
        - '.github/workflows/Sync_Lean.yml'
        - '.github/diy/patches/lede_lean/*.patch'
        - '.github/diy/patches/luci_lean/*.patch'
        - '.github/diy/patches/packages_lean/*.patch'  # 当workflow文件有改变时触发
  watch:
    types: [started]

jobs:
  sync_lede:
    name: 同步lede仓库
    if: github.event.repository.owner.id == github.event.sender.id  || ! github.event.sender.id
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    env:
      target: |
        - lede
        - openwrt-snapshot
        - dg741a
        - immortalwrt
        - hanwckf
      upstream: |
        - https://github.com/coolsnowwolf/lede.git
        - https://github.com/openwrt/openwrt.git
        - https://github.com/dg741a/lede.git
        - https://github.com/immortalwrt/immortalwrt.git
        - https://github.com/hanwckf/immortalwrt-mt798x.git

    steps:
      - name: 检出仓库
        uses: actions/checkout@v2

      - name: 配置环境
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          sudo timedatectl set-timezone "Asia/Shanghai"

      - name: 克隆仓库并设置上游
        run: |
          target=($TARGET)
          upstream=($UPSTREAM)
          cd $GITHUB_WORKSPACE
          git clone --quiet --depth=1 https://github.com/FlawShatter/lede.git temp_rep
          cd temp_rep
          for ((i=1; i<${#upstream[@]}; i++)); do
            echo "Target: ${target[$i]}, Upstream: ${upstream[$i]}"
            git remote add ${target[$i]} ${upstream[$i]}
          done
          git fetch --all

      - name: 拉取上游代码并打补丁
        env:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        run: |
          target=($TARGET)
          upstream=($UPSTREAM)
          cd $GITHUB_WORKSPACE/temp_rep
          for ((i=1; i<${#upstream[@]}; i++)); do
            echo "Target: ${target[$i]}, Upstream: ${upstream[$i]}"
            if [[ ${TARGET[$i]} == "hanwckf" ]]; then
              git checkout -B ${target[$i]} ${target[$i]}/openwrt-21.02
            else
              git checkout -B ${target[$i]} ${target[$i]}/master
            fi
            for patch_file in "$$GITHUB_WORKSPACE/.github/diy/patch/lede/${{ env.target[0] }}"/*.patch
            do
              echo "应用补丁中: $patch_file"
              if git apply --check "$patch_file"; then
                git apply "$patch_file"
              else
                echo "应用补丁时出错: $patch_file"
              fi
            done
            git add .
            git commit -m "Appling Patches."
            if [[ ${TARGET[$i]} == "lean" ]]; then
              git push --quiet "https://${{ secrets.ACCESS_TOKEN }}@github.com/FlawShatter/lede.git" -f HEAD:master
            else
              git push --quiet "https://${{ secrets.ACCESS_TOKEN }}@github.com/FlawShatter/lede.git" -f HEAD:${TARGET[$i]}
            fi
          done

  sync_luci:
    name: 同步 Luci 仓库
    if: github.event.repository.owner.id == github.event.sender.id  || ! github.event.sender.id
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    env:
      target: |
        - lede
        - openwrt
        - immortalwrt
      upstream: |
        - https://github.com/coolsnowwolf/luci.git
        - https://github.com/openwrt/luci.git
        - https://github.com/immortalwrt/luci.git

    steps:
      - name: 检出仓库
        uses: actions/checkout@v2

      - name: 配置环境
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          sudo timedatectl set-timezone "Asia/Shanghai"

      - name: 克隆仓库并设置上游
        run: |
          target=($TARGET)
          upstream=($UPSTREAM)
          cd $GITHUB_WORKSPACE
          git clone --quiet --depth=1 https://github.com/FlawShatter/luci.git temp_rep
          cd temp_rep
          for ((i=1; i<${#upstream[@]}; i++)); do
            git remote add ${target[$i]} ${upstream[$i]}
          done
          git fetch --all

      - name: 拉取上游代码并打补丁
        env:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        run: |
          target=($TARGET)
          upstream=($UPSTREAM)
          cd $GITHUB_WORKSPACE/temp_rep
          for ((i=1; i<${#upstream[@]}; i++)); do
            echo "Target: ${target[$i]}"
            git checkout -B ${target[$i]} ${target[$i]}/master
            for patch_file in "$$GITHUB_WORKSPACE/.github/diy/patch/lede/${target[$i]}"/*.patch
            do
              echo "应用补丁中: $patch_file"
              if git apply --check "$patch_file"; then
                git apply "$patch_file"
              else
                echo "应用补丁时出错: $patch_file"
              fi
            done
            git add .
            git commit -m "Appling Patches."
            git push --quiet "https://${{ secrets.ACCESS_TOKEN }}@github.com/FlawShatter/luci.git" -f HEAD:${TARGET[$i]}
            if [[ ${TARGET[$i]} == "immortalwrt" ]]; then
              echo "Target: hanwckf"
              git checkout -B hanwckf ${target[$i]}/openwrt-21.02
              for patch_file in $GITHUB_WORKSPACE/.github/diy/patch/lede/hanwckf/*.patch
              do
                echo "应用补丁中: $patch_file"
                if git apply --check "$patch_file"; then
                  git apply "$patch_file"
                else
                  echo "应用补丁时出错: $patch_file"
                fi
              done
              git add .
              git commit -m "Appling Patches."
              git push --quiet "https://${{ secrets.ACCESS_TOKEN }}@github.com/FlawShatter/luci.git" -f HEAD:hanwckf
            fi
          done

  sync_packages:
    name: 同步 Packages 仓库
    if: github.event.repository.owner.id == github.event.sender.id  || ! github.event.sender.id
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    env:
      target: |
        - lede
        - openwrt
        - immortalwrt
      upstream: |
        - https://github.com/coolsnowwolf/luci.git
        - https://github.com/openwrt/luci.git
        - https://github.com/immortalwrt/luci.git

    steps:
      - name: 检出仓库
        uses: actions/checkout@v2

      - name: 配置环境
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          sudo timedatectl set-timezone "Asia/Shanghai"

      - name: 克隆仓库并设置上游
        run: |
          target=($TARGET)
          upstream=($UPSTREAM)
          cd $GITHUB_WORKSPACE
          git clone --quiet --depth=1 https://github.com/FlawShatter/packages.git temp_rep
          cd temp_rep
          for ((i=1; i<${#upstream[@]}; i++)); do
            git remote add ${target[$i]} ${upstream[$i]}
          done
          git fetch --all

      - name: 拉取上游代码并打补丁
        env:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        run: |
          target=($TARGET)
          upstream=($UPSTREAM)
          cd $GITHUB_WORKSPACE/temp_rep
          for ((i=1; i<${#upstream[@]}; i++)); do
            echo "Target: ${target[$i]}"
            git checkout -B ${target[$i]} ${target[$i]}/master
            for patch_file in "$$GITHUB_WORKSPACE/.github/diy/patch/lede/${target[$i]}"/*.patch
            do
              echo "应用补丁中: $patch_file"
              if git apply --check "$patch_file"; then
                git apply "$patch_file"
              else
                echo "应用补丁时出错: $patch_file"
              fi
            done
            git add .
            git commit -m "Appling Patches."
            git push --quiet "https://${{ secrets.ACCESS_TOKEN }}@github.com/FlawShatter/packages.git" -f HEAD:${TARGET[$i]}
            if [[ ${TARGET[$i]} == "immortalwrt" ]]; then
              echo "Target: hanwckf"
              git checkout -B hanwckf ${target[$i]}/openwrt-21.02
              for patch_file in $GITHUB_WORKSPACE/.github/diy/patch/lede/hanwckf/*.patch
              do
                echo "应用补丁中: $patch_file"
                if git apply --check "$patch_file"; then
                  git apply "$patch_file"
                else
                  echo "应用补丁时出错: $patch_file"
                fi
              done
              git add .
              git commit -m "Appling Patches."
              git push --quiet "https://${{ secrets.ACCESS_TOKEN }}@github.com/FlawShatter/packages.git" -f HEAD:hanwckf
            fi
          done
